using AutoMapper;
using Mapster;
using MapTo.Benchmarks.Mappings;
using MapTo.Benchmarks.Models;

namespace MapTo.Benchmarks.Scenarios;

[SimpleJob(RunStrategy.Throughput)]
[MemoryDiagnoser]
[KeepBenchmarkFiles(false)]
[GroupBenchmarksBy(BenchmarkLogicalGroupRule.ByMethod)]
[Orderer(SummaryOrderPolicy.FastestToSlowest)]
public class BenchmarkMappingLibraries
{
    private readonly IMapper _autoMapper;
    private readonly MapperlyMappings _mapperlyMappings;
    private readonly SpotifyAlbumDto _spotifyAlbumDto;

    public BenchmarkMappingLibraries()
    {
        var json = File.ReadAllText("Data\\spotifyAlbum.json");

        _spotifyAlbumDto = SpotifyAlbumDto.FromJson(json);
        _autoMapper = AutomapperMappings.Configure();
        TinyMapperMappings.Configure();
        ExpressMapperMappings.Configure();
        _mapperlyMappings = MapperlyMappings.Configure();
    }

    [Benchmark]
    public SpotifyAlbum MapTo()
    {
        return _spotifyAlbumDto.MapToSpotifyAlbum();
    }

    [Benchmark]
    public SpotifyAlbum Mapperly()
    {
        return _mapperlyMappings.Map(_spotifyAlbumDto);
    }

    [Benchmark]
    public SpotifyAlbum AgileMapper()
    {
        return AgileObjects.AgileMapper.Mapper.Map(_spotifyAlbumDto).ToANew<SpotifyAlbum>();
    }

    [Benchmark]
    public SpotifyAlbum AutoMapper()
    {
        return _autoMapper.Map<SpotifyAlbum>(_spotifyAlbumDto);
    }

    [Benchmark]
    public SpotifyAlbum ExpressMapper()
    {
        return global::ExpressMapper.Mapper.Map<SpotifyAlbumDto, SpotifyAlbum>(_spotifyAlbumDto);
    }

    [Benchmark]
    public SpotifyAlbum ManualMapping()
    {
        // Generated by MappingGenerator
        return _spotifyAlbumDto.Map();
    }

    [Benchmark]
    public SpotifyAlbum Mapster()
    {
        return _spotifyAlbumDto.Adapt<SpotifyAlbum>();
    }

    [Benchmark]
    public SpotifyAlbum TinyMapper()
    {
        return Nelibur.ObjectMapper.TinyMapper.Map<SpotifyAlbum>(_spotifyAlbumDto);
    }
}