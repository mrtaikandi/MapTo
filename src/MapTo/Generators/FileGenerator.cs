using MapTo.Mappings;

namespace MapTo.Generators;

internal readonly record struct FileGenerator(
    bool SupportNullReferenceTypes,
    bool SupportFileScopedNamespace,
    TargetMapping Mapping) : ICodeBlockGenerator
{
    /// <inheritdoc />
    public void BeginWrite(CodeWriter writer)
    {
        writer
            .WriteAutoGeneratedHeader()
            .WriteNullableContextOptionIf(SupportNullReferenceTypes)
            .WriteSuppressFileScopeCompilerWarningIf(Mapping.Options.SuppressXmlDocWarnings, "CS1591", "Missing XML comment for publicly visible type or member")
            .WriteLine()
            .WriteUsings(["global::System.Linq"]);

        if (!Mapping.Namespace.IsGlobalNamespace)
        {
            if (SupportFileScopedNamespace)
            {
                writer.WriteLine($"namespace {Mapping.Namespace};");
                writer.WriteLine();
            }
            else
            {
                writer.WriteLine($"namespace {Mapping.Namespace}");
                writer.WriteOpeningBracket();
            }
        }
    }

    /// <inheritdoc />
    public void EndWrite(CodeWriter writer)
    {
        writer.WriteClosingBracketIf(!SupportFileScopedNamespace && !Mapping.Namespace.IsGlobalNamespace);
    }
}